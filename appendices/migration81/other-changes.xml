<?xml version="1.0" encoding="utf-8"?> <!-- EN-Revision: 4d2479dcf35d82aca39ee61f8ab36ceed78a869c Maintainer: lhsazevedo Status: ready -->
<sect1 xml:id="migration81.other-changes" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Outras Mudanças</title>

 <sect2 xml:id="migration81.other-changes.sapi">
  <title>Mudanças nos Módulos SAPI</title>

  <sect3 xml:id="migration81.other-changes.sapi.cli">
   <title>CLI</title>

   <para>
    Usando <option>-a</option> sem a <link linkend="book.readline">extensão readline</link> agora resultará em um erro.
    Anteriormente, <option>-a</option> sem readline havia o mesmo comportamento que
    chamar <command>php</command> sem nenhum argumento, além de imprimir uma mensagem adicional
    <literal>"Interactive mode enabled"</literal>.
    Esse modo <emphasis>não</emphasis> era interativo.
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.sapi.phpdbg">
   <title>PHPDBG</title>

   <para>
    Funcionalidade remota do <link linkend="book.phpdbg">phpdbg</link> foi removida.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration81.other-changes.functions">
  <title>Funções Alteradas</title>

  <sect3 xml:id="migration81.other-changes.functions.core">
   <title>Core</title>

   <para>
    A ordem das propriedades usadas em &foreach;, <function>var_dump</function>,
    <function>serialize</function>, comparação de objetos, etc. foi alterada.
    Propriedades agora são ordenadas naturalmente de acordo com a declaração
    e herança deles. Propriedades declaradas em uma classe base estarão
    antes das propriedades das filhas.
   </para>
   <para>
    A ordem é consistente com o layout interno das propriedades na estrutura
    <code>zend_object</code> e repete a ordem em
    <code>default_properties_table[]</code> e <code>properties_info_table[]</code>.
    A velha ordem não foi documentada e era causada por detalhes de implementação de herança de classes.
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.functions.filter">
   <title>Filtro</title>

   <para>
    A flag <constant>FILTER_FLAG_ALLOW_OCTAL</constant> do
    filtro <constant>FILTER_VALIDATE_INT</constant>
    agora aceita strings octais com o prefixo octal
    (<literal>"0o"</literal>/<literal>"0O"</literal>).
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.functions.gmp">
   <title>GMP</title>

   <para>
    Todas as funções <link linkend="book.gmp">GMP</link> agora aceitam string octal com o prefixo octal
    (<literal>"0o"</literal>/<literal>"0O"</literal>).
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.functions.pdo-odbc">
   <title>PDO ODBC</title>

   <para>
    <methodname>PDO::getAttribute</methodname> com
    <constant>PDO::ATTR_SERVER_INFO</constant> e
    <constant>PDO::ATTR_SERVER_VERSION</constant>
    agora retorna valores ao invés de lançar <classname>PDOException</classname>.
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.functions.reflection">
   <title>Reflexão</title>

   <para>
    <methodname>ReflectionProperty::setAccessible</methodname> e
    <methodname>ReflectionMethod::setAccessible</methodname>
    não têm mais efeito.
    Propriedades e métodos agora são sempre considerados acessíveis via Reflexão.
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.functions.standard">
   <title>Padrão</title>

   <para>
    <function>syslog</function> agora é segura para binários.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration81.other-changes.extensions">
  <title>Outras Mudanças em Extensões</title>

  <sect3 xml:id="migration81.other-changes.extensions.gd">
   <title>GD</title>

   <para>
    <function>imagewebp</function> agora pode fazer codificação WebP lossless
    passando <constant>IMG_WEBP_LOSSLESS</constant> como a qualidade.
   </para>
   <para>
    Essa constante é definida apenas se a libgd utilizada suporta
    codificação WebP lossless.
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.extensions.mysqli">
   <title>MySQLi</title>

   <para>
    <methodname>mysqli_stmt::next_result</methodname> e
    <methodname>mysqli::fetch_all</methodname>
    agora estão disponíveis quando linkando contra libmysqlclient.
   </para>
  </sect3>

  <sect3 xml:id="migration81.other-changes.extensions.openssl">
   <title>OpenSSL</title>

   <itemizedlist>
    <listitem>
     <para>
      A <link linkend="book.openssl">extensão OpenSSL</link>agora requer pelo menos OpenSSL versão 1.0.2.
     </para>
    </listitem>
    <listitem>
     <para>
      OpenSSL 3.0 agora é suportado. Esteja ciente que muitos cifradores não estão mais
      habilitados por padrão (parte do provedor legado), e que validação
      de parâmetros (p. ex.: tamanho mínimo de chaves) é mais estrita agora.
     </para>
    </listitem>
   </itemizedlist>
  </sect3>

  <sect3 xml:id="migration81.other-changes.extensions.phar">
   <title>Phar</title>

   <itemizedlist>
    <listitem>
     <para>
      SHA256 agora é usado por padrão para assinaturas.
     </para>
    </listitem>
    <listitem>
     <para>
      Adicionado suporte para assinaturas OpenSSL_SHA256 e OpenSSL_SHA512.
     </para>
    </listitem>
   </itemizedlist>
  </sect3>

  <sect3 xml:id="migration81.other-changes.extensions.snmp">
   <title>SNMP</title>

   <itemizedlist>
    <listitem>
     <para>
      Adicionado suporte para SHA256 e SHA512 para o protocolo de segurança.
     </para>
    </listitem>
   </itemizedlist>
  </sect3>

  <sect3 xml:id="migration81.other-changes.extensions.standard">
   <title>Padrão</title>

   <para>
    <code>--with-password-argon2</code>agora usa pkg-config para detectar libargon2.
    Como tal, o local para uma libgargon2 alternativa deve ser especificado usando
    <envar>PKG_CONFIG_PATH</envar>.
   </para>
  </sect3>
 </sect2>

 <sect2 xml:id="migration81.other-changes.ini">
  <title>Mudanças no Tratamento de Arquivos INI</title>

  <itemizedlist>
   <listitem>
    <para>
     A diretiva INI <link linkend="ini.log-errors-max-len">log_errors_max_len</link>
     foi removida.
     Ela não possui mais efeito desde o PHP 8.0.0.
    </para>
   </listitem>
   <listitem>
    <para>
     Um dólar no início de uma string entre aspas agora pode ser escapado: <literal>"\${"</literal> agora será
     interpretado como uma string de conteúdo <literal>${</literal>.
    </para>
   </listitem>
   <listitem>
    <para>
     Barras inversas em strings entre aspas duplas agora são mais consistentemente tratadas como
     caracteres de escape. Anteriormente, <literal>"foo\\"</literal> seguida de
     algo diferente de uma nova linha não era considerada uma string finalizada.
     Agora ela é interpretada como uma string de conteúdo <literal>foo\</literal>.
     No entanto, como uma exceção, a string <literal>"foo\"</literal>
     seguida de uma nova linha continuará sendo tratada como uma string válida de
     conteúdo <literal>foo\</literal> em vez de uma string não terminada.
     Essa exceção existe para suportar usos ingênuos de caminhos do Windows tais como
     <literal>"C:\foo\"</literal>.
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
