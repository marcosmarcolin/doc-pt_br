<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 769812c12f00c1978bf7dd711dca38dbf05462da Maintainer: marcosmarcolin Status: ready --><!-- CREDITS: fernandoc -->
<refentry xml:id="function.error-log" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>error_log</refname>
  <refpurpose>Envia uma mensagem de erro para as rotinas de tratamento de erros definidas</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>error_log</methodname>
   <methodparam><type>string</type><parameter>message</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>message_type</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>destination</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>additional_headers</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Envia uma mensagem de erro para o registro de erros do servidor web ou para um arquivo.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>message</parameter></term>
     <listitem>
      <para>
       A mensagem de erro que deve ser registrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>message_type</parameter></term>
     <listitem>
      <para>
       Indica para onde o erro deve ser direcionado. Os possíveis tipos de mensagem são os
       seguintes:
      </para>
      <para>
       <table>
        <title>Tipos de logs de <function>error_log</function></title>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry>0</entry>
           <entry>
            <parameter>message</parameter> é enviado para sistema de logs do PHP, usando
            o mecanismo de log do sistema operacional ou um arquivo, dependendo do que
            a diretiva de configuração <link linkend="ini.error-log">error_log</link>
            estiver definida. Esta é a opção padrão.
           </entry>
          </row>
          <row>
           <entry>1</entry>
           <entry>
            <parameter>message</parameter> é enviado por e-mail para o endereço no parâmetro
            <parameter>destination</parameter>. Este é o único tipo de
            mensagem em que o quarto parâmetro,
            <parameter>additional_headers</parameter>, é utilizado.
           </entry>
          </row>
          <row>
           <entry>2</entry>
           <entry>
            Não é mais uma opção.
           </entry>
          </row>
          <row>
           <entry>3</entry>
           <entry>
            <parameter>message</parameter> é adicionada ao arquivo
            <parameter>destination</parameter>. Uma nova linha não é automaticamente
            adicionada ao final da string <parameter>message</parameter>.
           </entry>
          </row>
          <row>
           <entry>4</entry>
           <entry>
            <parameter>message</parameter> é enviado diretamente para o manipulador de log do
            SAPI.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>destination</parameter></term>
     <listitem>
      <para>
       O destino. Seu significado depende do parâmetro
       <parameter>message_type</parameter>, conforme descrito acima.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>additional_headers</parameter></term>
     <listitem>
      <para>
       Os cabeçalhos adicionais. É usado quando o parâmetro <parameter>message_type</parameter>
       está definido como <literal>1</literal>.
       Este tipo de mensagem usa a mesma função interna que
       <function>mail</function> utiliza.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
   Se <parameter>message_type</parameter> for zero, esta função sempre retorna &true;,
   independentemente de o erro poder ser registrado ou não.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>destination</parameter> e
       <parameter>additional_headers</parameter> agora permitem null.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example role="php">
    <title>Exemplos <function>error_log</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Envia uma notificação através do registro do servidor se não conseguirmos
// conectar ao banco de dados.
if (!Ora_Logon($username, $password)) {
    error_log("Banco de dados Oracle não disponível!", 0);
}

// Notificar o administrador por e-mail se ficarmos sem FOO
if (!($foo = allocate_new_foo())) {
    error_log("Grande problema, estamos sem FOOs!", 1,
               "operator@example.com");
}

// Outra forma de chamar error_log():
error_log("Você cometeu um erro!", 3, "/var/tmp/my-errors.log");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <simpara>
    <function>error_log</function> não é seguro para binários. <parameter>message</parameter> será truncado pelo caractere nulo.
   </simpara>
  </warning>
  <tip>
   <simpara>
    <parameter>message</parameter> não deve conter o caractere nulo. Observe que <parameter>message</parameter> pode ser enviado para arquivo, e-mail, syslog, etc. Use a função apropriada de conversão/escape, como <function>base64_encode</function>, <function>rawurlencode</function> ou <function>addslashes</function> antes de chamar <function>error_log</function>.
   </simpara>
  </tip>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
