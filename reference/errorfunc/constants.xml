<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4c9b6ff9fbc0b2516d21a3f82ad36b91ea1d0aa4 Maintainer: leonardolara Status: ready -->
<appendix xml:id="errorfunc.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants.core;

  <simpara>
  As constantes a seguir (seus valores numéricos ou seus
  nomes simbólicos) são usadas como máscaras de bits para especificar que erros devem ser reportados.
  É possível usar
  <link linkend="language.operators.bitwise">operadores binários</link>
  para combinar estes valores ou mascarar certos tipos de erro.
 </simpara>

 <tip>
  <simpara>
   Os nomes destas constantes podem ser usados no &php.ini;,
   no lugar de valores numéricos puros aos quais elas correspondem.
   Entretanto, apenas os operadores
   <literal>|</literal>,
   <literal>~</literal>,
   <literal>^</literal>,
   <literal>!</literal> e
   <literal>&amp;</literal>
   são compreendidos dentro do &php.ini;.
  </simpara>
 </tip>

 <warning>
  <simpara>
   Não é possível usar os nomes simbólicos fora do PHP.
   Por exemplo, no &httpd.conf;, deve ser usado o valor da máscara de bits computada.
  </simpara>
 </warning>

 <variablelist xml:id="errorfunc.constants.errorlevels">
  <varlistentry xml:id="constant.e-error">
   <term>
    <constant>E_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Erros fatais em tempo de execução.
     Indicam erros a partir dos quais não é possível retomar a execução,
     como problema de alocação de memória por exemplo.
     A execução do script é terminada.
    </simpara>
    <simpara>
     Valor da constante: <literal>1</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-warning">
   <term>
    <constant>E_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Alertas em tempo de executação (erros não fatais).
     A execução do script não é terminada.
    </simpara>
    <simpara>
     Valor da constante: <literal>2</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-parse">
   <term>
    <constant>E_PARSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Erro de análise em tempo de compilação.
     Erros de análise somente devem ser gerados pelo analisador.
    </simpara>
    <simpara>
     Valor da constante: <literal>4</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-notice">
   <term>
    <constant>E_NOTICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Avisos em tempo de execução.
     Indicam que o script encontrou algo que pode indicar um erro,
     mas também pode acontecer no curso normal de execução de um script.
    </simpara>
    <simpara>
     Valor da constante: <literal>8</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-core-error">
   <term>
    <constant>E_CORE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Erros fatais que ocorrem durante a inicialização do PHP.
     É como um <constant>E_ERROR</constant>,
     exceto por ser gerado pelo núcleo do PHP.
    </simpara>
    <simpara>
     Valor da constante: <literal>16</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-core-warning">
   <term>
    <constant>E_CORE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Alertas (erros não fatais) que ocorrem na inicialização do PHP.
     É como um <constant>E_WARNING</constant>,
     exceto por ser gerado pelo núcleo do PHP.
    </simpara>
    <simpara>
     Valor da constante: <literal>32</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-compile-error">
   <term>
    <constant>E_COMPILE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Erros fatais em tempo de compilação.
     É como um <constant>E_ERROR</constant>,
     exceto por ser gerado pelo mecanismo de scripts Zend.
    </simpara>
    <simpara>
     Valor da constante: <literal>64</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-compile-warning">
   <term>
    <constant>E_COMPILE_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Alertas em tempo de compilação (erros não fatais).
     É como um <constant>E_WARNING</constant>,
     exceto por ser gerado pelo mecanismo de scripts Zend.
    </simpara>
    <simpara>
     Valor da constante: <literal>128</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-deprecated">
   <term>
    <constant>E_DEPRECATED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Avisos de descontinuação em tempo de execução.
     Habilite para receber alertas sobre código
     que não funcionará em versões futuras.
    </simpara>
    <simpara>
     Valor da constante: <literal>8192</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-error">
   <term>
    <constant>E_USER_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Mensagem de erro gerada pelo usuário.
     É como um <constant>E_ERROR</constant>,
     exceto por ser gerada no código PHP através do uso da função
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valor da constante: <literal>256</literal>
    </simpara>
    <warning>
     <simpara>
      O uso desta constante com <function>trigger_error</function> foi
      descontinuado a partir do PHP 8.4.0.
      É recomendado, alternativamente, fazer uso de &throw; com uma <exceptionname>Exception</exceptionname>
      ou chamar <function>exit</function>.
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-warning">
   <term>
    <constant>E_USER_WARNING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Mensagem de alerta gerada pelo usuário.
     É como um <constant>E_WARNING</constant>,
     exceto por ser gerada no código PHP através do uso da função
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valor da constante: <literal>512</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-notice">
   <term>
    <constant>E_USER_NOTICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Mensagem de aviso gerada pelo usuário.
     É como um <constant>E_NOTICE</constant>,
     exceto por ser gerada no código PHP através do uso da função
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valor da constante: <literal>1024</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-user-deprecated">
   <term>
    <constant>E_USER_DEPRECATED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Mensagem de descontinuação gerada pelo usuário.
     É como <constant>E_DEPRECATED</constant>,
     exceto por ser gerada nop código PHP através do uso da função
     <function>trigger_error</function>.
    </simpara>
    <simpara>
     Valor da constante: <literal>16384</literal>
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-strict">
   <term>
    <constant>E_STRICT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Sugestões em tempo de execução emitidas pelo PHP sobre o código executado
     para assegurar compatibilidade com versões futuras.
    </simpara>
    <simpara>
     Valor da constante: <literal>2048</literal>
    </simpara>
    <warning>
     <simpara>
      Este nível de erro não é utilizado
      e foi descontinuado a partir do PHP 8.4.0.
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-recoverable-error">
   <term>
    <constant>E_RECOVERABLE_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     "Exceções" legadas do mecanismo, que correspondem a um erro fatal capturável.
     Parecida com <exceptionname>Error</exceptionname> mas precisam ser capturadas através de
     um manipulador de erro definido pelo usuário (consulte <function>set_error_handler</function>).
     Se não tratado, se comporta como <constant>E_ERROR</constant>.
    </simpara>
    <simpara>
     Valor da constante: <literal>4096</literal>
    </simpara>
    <note>
     <simpara>
      Este nível de erro está efetivamente sem uso,
      o único caso onde pode acontecer é na falha ao interpretar um
      &object; como um <type>bool</type>.
      Isto só pode acontecer para objetos internos.
     </simpara>
     <simpara>
      O exemplo mais comum, antes do PHP 8.4.0, é usar
      uma instância de <classname>GMP</classname> em uma condicional.
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="constant.e-all">
   <term>
    <constant>E_ALL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <simpara>
     Máscara de bits que contém todos os erros, alertas e avisos.
    </simpara>
    <simpara>
     Valor da constante: <literal>30719</literal>
    </simpara>
    <warning>
     <simpara>
      Antes do PHP 8.4, o valor da constante era <literal>32767</literal>.
     </simpara>
    </warning>
   </listitem>
  </varlistentry>

 </variablelist>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
