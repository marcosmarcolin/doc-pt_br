<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: d0532e45fb2b6766c7fc73c7ccfc30a9720f8888 Maintainer: marcosmarcolin Status: ready -->
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="function.getimagesize">
 <refnamediv>
  <refname>getimagesize</refname>
  <refpurpose>Obtém o tamanho de uma imagem</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>getimagesize</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">image_info</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   A função <function>getimagesize</function> irá determinar o
   tamanho de qualquer arquivo de imagem suportado fornecido e retornar as dimensões,
   juntamente com o tipo de arquivo e uma string de texto <literal>height/width</literal> a ser
   usada dentro de uma tag<acronym>HTML</acronym><tag>IMG</tag> normal,
   juntamente com o tipo de conteúdo <acronym>HTTP</acronym> correspondente.
  </para>
  <para>
   <function>getimagesize</function> também pode retornar mais informações
   no parâmetro <parameter>image_info</parameter>.
  </para>
  <caution>
   <para>
    Essa função espera que <parameter>filename</parameter> seja um arquivo
    de imagem válido. Se um arquivo que não seja uma imagem for fornecido,
    ele pode ser incorretamente detectado como uma imagem, e a função será bem-sucedida,
    mas o array pode conter valores sem sentido.
   </para>
   <para>
    Não utilize a função <function>getimagesize</function> para verificar se um
    determinado arquivo é uma imagem válida. Em vez disso, utilize uma solução específica
    para essa finalidade, como a extensão <link linkend="book.fileinfo">Fileinfo</link>.
   </para>
  </caution>
  <note>
   <simpara>
    Observe que os formatos JPC e JP2 podem ter componentes com diferentes
    profundidades de bits. Nesse caso, o valor "bits" representa a maior profundidade de bits encontrada. Além disso,
    arquivos JP2 podem conter <literal>multiple JPEG 2000 codestreams</literal>. Nesse caso,
    a função <function>getimagesize</function> retorna os valores do primeiro codestream
    que encontra na raiz do arquivo.
   </simpara>
  </note>
  <note>
   <simpara>
    As informações sobre ícones são obtidas a partir do ícone com a maior
    taxa de bits.
   </simpara>
  </note>
  <note>
   <simpara>
    As imagens GIF consistem em um ou mais frames, em que cada frame pode ocupar
    apenas uma parte da imagem. O tamanho da imagem relatado pela função
    <function>getimagesize</function> é o tamanho geral (lido do descritor da
    tela lógica).
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Este parâmetro especifica o arquivo do qual você deseja obter
       informações. Ele pode fazer referência a um arquivo local ou (se a configuração permitir) a
       um arquivo remoto usando um dos <link linkend="wrappers">streams suportados</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>image_info</parameter></term>
     <listitem>
      <para>
       Este parâmetro opcional permite extrair informações estendidas do
       arquivo de imagem. Atualmente, isso retornará os diferentes marcadores
       APP <acronym>JPG</acronym> como um array associativo.
       Alguns programas usam esses marcadores APP para incorporar informações de texto em
       imagens. Um dos usos comuns é incorporar informações
       <link xlink:href="&url.iptc;">IPTC</link> no marcador APP13.
       Você pode usar a função <function>iptcparse</function> para analisar o
       marcador binário APP13 em algo legível.
      </para>
      <note>
       <para>
        O parâmetro <parameter>image_info</parameter> suporta apenas arquivos
        no formato <acronym>JFIF</acronym>.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um array com até 7 elementos. Nem todos os tipos de imagem incluirão
   os elementos <literal>channels</literal> e <literal>bits</literal>.
  </para>
  <para>
   O índice 0 e 1 contém, respectivamente, a largura e a altura da imagem.
  </para>
  <note>
   <para>
    Alguns formatos podem não conter nenhuma imagem ou podem conter várias imagens. Nesses casos,
    a função <function>getimagesize</function> pode não ser capaz de determinar
    corretamente o tamanho da imagem. A função <function>getimagesize</function> retornará
    zero para largura e altura nesses casos.
   </para>
  </note>
  <para>
   O índice 2 é uma das <link linkend="image.constants">constantes IMAGETYPE_XXX</link>, que
   indica o tipo da imagem.
  </para>
  <para>
   O índice 3 é uma sequência de texto com a string correta
   <literal>height="yyy" width="xxx"</literal>
   que pode ser usada diretamente em uma tag <acronym>IMG</acronym>.
  </para>
  <para>
   <literal>mime</literal> é o tipo MIME correspondente da imagem.
   Essa informação pode ser usada para fornecer imagens com o cabeçalho
   <literal>Content-type</literal> HTTP correto:
   <example>
    <title><function>getimagesize</function> e tipos MIME.</title>
    <programlisting role="php">
<![CDATA[
<?php
$size = getimagesize($filename);
$fp = fopen($filename, "rb");
if ($size && $fp) {
    header("Content-type: {$size['mime']}");
    fpassthru($fp);
    exit;
} else {
    // erro
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <literal>channels</literal>
   Será 3 para imagens RGB e 4 para imagens CMYK.
  </para>
  <para>
   <literal>bits</literal> é o número de bits para cada cor.
  </para>
  <para>
   Para alguns tipos de imagem, a presença dos valores de <literal>channels</literal> e
   <literal>bits</literal> pode ser um pouco confusa.
   Por exemplo, o formato <acronym>GIF</acronym> sempre utiliza 3 canais
   por pixel, mas o número de bits por pixel não pode ser calculado para um
   <acronym>GIF</acronym> animado com uma tabela de cores global.
  </para>
  <para>
   Em caso de falha, é retornado &false;.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Se for impossível acessar a imagem do <parameter>filename</parameter>, a função
   <function>getimagesize</function> gerará um erro de nível
   <constant>E_WARNING</constant>. Em caso de erro de leitura,
   <function>getimagesize</function> gerará um erro de nível
   <constant>E_NOTICE</constant>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.2.0</entry>
       <entry>
        Agora, a função retorna as dimensões reais da imagem, bits e canais de imagens AVIF;
        anteriormente, as dimensões eram relatadas como <literal>0x0</literal>,
        e bits e channels não eram relatados de forma alguma.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        Foi adicionado suporte para WebP.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>getimagesize</function>exemplo</title>
    <programlisting role="php">
<![CDATA[
<?php
list($width, $height, $type, $attr) = getimagesize("img/flag.jpg");
echo "<img src=\"img/flag.jpg\" $attr alt=\"getimagesize() example\" />";
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>getimagesize (URL)</title>
    <programlisting role="php">
<![CDATA[
<?php
$size = getimagesize("http://www.example.com/gifs/logo.gif");

// se o nome do arquivo contiver espaços, ele será codificado adequadamente.
$size = getimagesize("http://www.example.com/gifs/lo%20go.gif");

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>getimagesize() retornando IPTC.</title>
    <programlisting role="php">
<![CDATA[
<?php
$size = getimagesize("testimg.jpg", $info);
if (isset($info["APP13"])) {
    $iptc = iptcparse($info["APP13"]);
    var_dump($iptc);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.gd.notrequired;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>image_type_to_mime_type</function></member>
   <member><function>exif_imagetype</function></member>
   <member><function>exif_read_data</function></member>
   <member><function>exif_thumbnail</function></member>
   <member><function>imagesx</function></member>
   <member><function>imagesy</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
