<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1d8068ecb070fdc360d750e0c1f3f15796e61ec0 Maintainer: marcosmarcolin Status: ready --><!-- CREDITS: marcosmarcolin -->
<refentry xml:id="memcached.getallkeys" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Memcached::getAllKeys</refname>
  <refpurpose>Obtém as keys armazenadas em todos os servidores</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Memcached">
   <modifier>public</modifier> <type class="union"><type>array</type><type>false</type></type><methodname>Memcached::getAllKeys</methodname>
   <void/>
  </methodsynopsis>
  <para>
   <function>Memcached::getAllKeys</function> consulta cada servidor
   memcache e recupera um array com todas as keys armazenadas neles naquele momento.
   Esta não é uma operação atômica, portanto, não é um instantâneo verdadeiramente consistente
   das keys no momento. Como o memcache não garante o retorno de todas as keys,
   você também não pode presumir que todas as keys foram retornadas.
  </para>
  <note>
   <para>
    Este método destina-se a fins de depuração e não deve ser usado em escala!
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna as keys armazenadas em todos os servidores em caso de sucesso&return.falseforfailure;.
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
