<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a500262b84e367c8e57047daf2464546686d4956 Maintainer: marcosmarcolin Status: ready --><!-- CREDITS: marcosmarcolin -->
<refentry xml:id="function.curl-setopt" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_setopt</refname>
  <refpurpose>Define uma opção para uma transferência cURL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>curl_setopt</methodname>
   <methodparam><type>CurlHandle</type><parameter>handle</parameter></methodparam>
   <methodparam><type>int</type><parameter>option</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Define uma opção no identificador de sessão cURL fornecido.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &curl.ch.description;
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <para>
       A opção <literal>CURLOPT_XXX</literal> a ser definida.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       O valor a ser definido na <parameter>option</parameter>.
      </para>
      <para>
       <parameter>value</parameter> deve ser um <type>bool</type> para os
       seguintes valores do parâmetro <parameter>option</parameter>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry valign="top">Opção</entry>
           <entry valign="top">Definir <parameter>value</parameter> para</entry>
           <entry valign="top">Notas</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_AUTOREFERER</constant></entry>
           <entry valign="top">
            &true; para definir automaticamente o campo <literal>Referer:</literal>
            nas solicitações em que segue um <literal>Location:</literal> redirect.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIESESSION</constant></entry>
           <entry valign="top">
            &true; para marcar isso como uma nova "sessão" de cookie. Isso forçará o libcurl
            a ignorar todos os cookies que está prestes a carregar que são "cookies de sessão"
            da sessão anterior. Por padrão, libcurl sempre armazena e carrega todos os
            cookies, independente se são cookies de sessão ou não.
            Os cookies de sessão são cookies sem prazo de validade e devem estar ativos
            e existentes apenas para esta "sessão".
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CERTINFO</constant></entry>
           <entry valign="top">
            &true; para enviar informações de certificação SSL para <literal>STDERR</literal>
            em transferências seguras.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.19.1.
            Requer que <constant>CURLOPT_VERBOSE</constant> esteja ativado para ter efeito.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECT_ONLY</constant></entry>
           <entry valign="top">
            &true; diz à biblioteca para executar toda a autenticação de proxy necessária
            e configuração de conexão, mas nenhuma transferência de dados. Esta opção é implementada
            para HTTP, SMTP e POP3.
           </entry>
           <entry valign="top">
            Adicionado em 7.15.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CRLF</constant></entry>
           <entry valign="top">
            &true; para converter novas linhas Unix em novas linhas CRLF
            em transferências.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant></entry>
           <entry valign="top">
            &true; para não permitir URLs que incluam um nome de usuário. Os nomes de usuário são permitidos por padrão (0).
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.61.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant></entry>
           <entry valign="top">
            &true; para embaralhar a ordem de todos os endereços retornados para que sejam usados
            em uma ordem aleatória, quando um nome for resolvido e mais de um endereço IP for retornado.
            Isso pode fazer com que o IPv4 seja usado antes do IPv6 ou vice-versa.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.60.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HAPROXYPROTOCOL</constant></entry>
           <entry valign="top">
            &true; para enviar um cabeçalho do protocolo HAProxy PROXY v1 no início da conexão.
            A ação padrão é não enviar este cabeçalho.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.60.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_COMPRESSION</constant></entry>
           <entry valign="top">
            &true; para ativar a compactação SSH integrada. Este é um pedido, não uma ordem;
            o servidor pode ou não fazê-lo.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.56.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant></entry>
           <entry valign="top">
            &true; para usar um cache DNS global. Esta opção não é thread-safe.
            Ele é ativado condicionalmente por padrão se o PHP for construído para uso não encadeado
            (CLI, FCGI, Apache2-Prefork, etc.).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FAILONERROR</constant></entry>
           <entry valign="top">
            &true; para falhar detalhadamente se o código HTTP retornado
            for maior ou igual a 400. O comportamento padrão é retornar
            a página normalmente, ignorando o código.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_FALSESTART</constant></entry>
           <entry valign="top">
            &true; para habilitar início falso de TLS.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.42.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FILETIME</constant></entry>
           <entry valign="top">
            &true; para tentar recuperar a data de modificação
            do documento remoto. Esse valor pode ser recuperado usando
            a opção <constant>CURLINFO_FILETIME</constant> com
            <function>curl_getinfo</function>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FOLLOWLOCATION</constant></entry>
           <entry valign="top">
            &true; para seguir qualquer cabeçalho
            <literal>"Location: "</literal> que o servidor envia como
            parte do cabeçalho HTTP.
            Consulte também <constant>CURLOPT_MAXREDIRS</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FORBID_REUSE</constant></entry>
           <entry valign="top">
            &true; para forçar a conexão a fechar explicitamente
            quando terminar o processamento e não ser agrupada para reutilização.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FRESH_CONNECT</constant></entry>
           <entry valign="top">
            &true; para forçar o uso de uma nova conexão
            em vez de uma em cache.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPRT</constant></entry>
           <entry valign="top">
            &true; para usar EPRT (e LPRT) ao fazer downloads
            FTP ativos. Use &false; para desabilitar EPRT e LPRT e use
            apenas PORT.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPSV</constant></entry>
           <entry valign="top">
            &true; para tentar primeiro um comando EPSV para
            transferências FTP antes de reverter para PASV. Defina como &false;
            para desativar o EPSV.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant></entry>
           <entry valign="top">
            &true; para criar diretórios ausentes quando uma operação de FTP
            encontra um caminho que não existe no momento.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPAPPEND</constant></entry>
           <entry valign="top">
            &true; para acrescentar ao arquivo remoto em vez de
            substituí-lo.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_NODELAY</constant></entry>
           <entry valign="top">
            &true; para desabilitar o algoritmo Nagle do TCP, que tenta minimizar
            o número de pequenos pacotes na rede.
           </entry>
           <entry valign="top">
            Disponível para versões compiladas com libcurl 7.11.2 ou
            superior.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPASCII</constant></entry>
           <entry valign="top">
            Um alias de
            <constant>CURLOPT_TRANSFERTEXT</constant>. Use isso em vez disso.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPLISTONLY</constant></entry>
           <entry valign="top">
            &true; para listar apenas os nomes de um
            diretório FTP.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADER</constant></entry>
           <entry valign="top">
            &true; para incluir o cabeçalho na saída.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry><constant>CURLINFO_HEADER_OUT</constant></entry>
           <entry valign="top">
            &true; para rastrear a string de solicitação do identificador.
           </entry>
           <entry valign="top">
            O prefixo <constant>CURLINFO_</constant>
            é intencional.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP09_ALLOWED </constant></entry>
           <entry valign="top">
            Se deve permitir respostas HTTP/0.9. O padrão é &false; a partir de libcurl 7.66.0;
            anteriormente, o padrão era &true;.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.15 e 7.4.3, respectivamente, se construído em libcurl >= 7.64.0
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPGET</constant></entry>
           <entry valign="top">
            &true; para redefinir o método de solicitação HTTP para GET.
            Como GET é o padrão, isso só é necessário se o método de
            solicitação tiver sido alterado.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPPROXYTUNNEL</constant></entry>
           <entry valign="top">
            &true; para encapsular por meio de um determinado proxy HTTP.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_CONTENT_DECODING</constant></entry>
           <entry valign="top">
            &false; para obter o corpo da resposta HTTP bruta.
           </entry>
           <entry valign="top">
            Disponível se construído em libcurl >= 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant></entry>
           <entry valign="top">
            &true; para continuar enviando o corpo da solicitação se o código HTTP retornado
            for igual ou maior que 300. A ação padrão seria interromper o envio
            e fechar o fluxo ou a conexão. Adequado para autenticação NTLM manual.
            A maioria dos aplicativos não precisa dessa opção.
           </entry>
           <entry valign="top">
            Disponível a partir do PHP 7.3.0 se construído em libcurl >= 7.51.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MUTE</constant></entry>
           <entry valign="top">
            &true; para ser completamente silencioso em relação
            às funções cURL.
           </entry>
           <entry valign="top">
            Removido no cURL 7.15.5 (em vez disso, você pode usar CURLOPT_RETURNTRANSFER)
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NETRC</constant></entry>
           <entry valign="top">
            &true; para verificar o arquivo <filename>~/.netrc</filename>
            para localizar um nome de usuário e senha para o site remoto com
            o qual uma conexão está sendo estabelecida.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOBODY</constant></entry>
           <entry valign="top">
            &true; para excluir o corpo da saída.
            O método de solicitação é definido como HEAD. Alterar isso para &false; não
            o altera para GET.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOPROGRESS</constant></entry>
           <entry valign="top"><para>
            &true; para desabilitar o medidor de progresso para transferências cURL.
            <note>
             <para>
              O PHP define automaticamente esta opção como &true;, isso só deve
              ser alterado para fins de depuração.
             </para>
            </note>
           </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOSIGNAL</constant></entry>
           <entry valign="top">
            &true; para ignorar qualquer função cURL que faça
            com que um sinal seja enviado ao processo PHP. Isso é ativado por padrão
            em SAPIs multi-threaded para que as opções de tempo limite ainda possam ser usadas.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PATH_AS_IS</constant></entry>
           <entry valign="top">
            &true; para não lidar com sequências de ponto e ponto.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.42.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PIPEWAIT</constant></entry>
           <entry valign="top">
            &true; para aguardar pipelining/multiplexing.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.42.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POST</constant></entry>
           <entry valign="top">
            &true; para fazer um POST HTTP regular. Este POST é o
            tipo <literal>application/x-www-form-urlencoded</literal> normal,
            mais comumente usado por formulários HTML.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PUT</constant></entry>
           <entry valign="top">
            &true; para HTTP PUT um arquivo. O arquivo para PUT
            deve ser configurado com <constant>CURLOPT_INFILE</constant> e
            <constant>CURLOPT_INFILESIZE</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RETURNTRANSFER</constant></entry>
           <entry valign="top">
            &true; para retornar a transferência como uma string do
            valor de retorno de <function>curl_exec</function> em vez de
            emiti-la diretamente.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SASL_IR</constant></entry>
           <entry valign="top">
            &true; para habilitar o envio da resposta inicial no primeiro pacote.
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.31.10. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_ENABLE_ALPN</constant></entry>
           <entry valign="top">
            &false; para desabilitar o ALPN no handshake SSL (se o backend
            SSL libcurl for construído para usá-lo), que pode ser usado para
            negociar http2.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.36.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_ENABLE_NPN</constant></entry>
           <entry valign="top">
            &false; para desabilitar o NPN no handshake SSL (se o backend
            SSL libcurl for construído para usá-lo), que pode ser usado para
            negociar http2.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.36.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            &false; para impedir que o cURL verifique o certificado do
            par. Certificados alternativos para verificação podem ser
            especificados com a opção <constant>CURLOPT_CAINFO</constant> ou um
            diretório de certificados pode ser especificado com a
            opção <constant>CURLOPT_CAPATH</constant>.
           </entry>
           <entry valign="top">
            &true; por padrão a partir do cURL 7.10. Pacote padrão instalado a partir do
            cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYSTATUS</constant></entry>
           <entry valign="top">
            &true; para verificar o status do certificado.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.41.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            &false; para impedir que o cURL verifique o certificado do par.
            Certificados alternativos para verificação podem ser especificados
            com a opção <constant>CURLOPT_CAINFO</constant> ou um
            diretório de certificados pode ser especificado com a
            opção <constant>CURLOPT_CAPATH</constant>.
            Quando definido como falso, a verificação do certificado de mesmo nível é bem-sucedida.
           </entry>
           <entry valign="top">
            &true; por padrão. Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SAFE_UPLOAD</constant></entry>
           <entry valign="top">
            Sempre &true;, o que desabilita o suporte para o prefixo <literal>@</literal>
            para upload de arquivos em <constant>CURLOPT_POSTFIELDS</constant>, o que
            significa que os valores que começam com <literal>@</literal> podem ser passados
            com segurança como campos. <classname>CURLFile</classname> pode ser usado
            para uploads.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant></entry>
           <entry valign="top">
            &true; para suprimir os cabeçalhos de resposta CONNECT do proxy das funções de callback
            do usuário <constant>CURLOPT_HEADERFUNCTION</constant> e <constant>CURLOPT_WRITEFUNCTION</constant>,
            quando <constant>CURLOPT_HTTPPROXYTUNNEL</constant> é usado e uma solicitação CONNECT é feita.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.54.0. Disponível desde PHP 7.3.0
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_FASTOPEN</constant></entry>
           <entry valign="top">
            &true; para habilitar TCP Fast Open.
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.49.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TFTP_NO_OPTIONS</constant></entry>
           <entry valign="top">
            &true; para não enviar solicitações de opções TFTP.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.48.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TRANSFERTEXT</constant></entry>
           <entry valign="top">
            &true; para usar o modo ASCII para transferências FTP.
            Para LDAP, ele recupera dados em texto simples em vez de HTML. Em
            sistemas Windows, ele não definirá <literal>STDOUT</literal> para o
            modo binário.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNRESTRICTED_AUTH</constant></entry>
           <entry valign="top">
            &true; para continuar enviando o nome de usuário e a senha
            ao seguir os locais (usando
            <constant>CURLOPT_FOLLOWLOCATION</constant>), mesmo quando o
            nome do host foi alterado.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UPLOAD</constant></entry>
           <entry valign="top">
            &true; para se preparar para um upload.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_VERBOSE</constant></entry>
           <entry valign="top">
            &true; para gerar informações detalhadas. Grava a
            saída em <literal>STDERR</literal> ou no arquivo especificado
            usando <constant>CURLOPT_STDERR</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> deve ser um <type>int</type> para os
       seguintes valores do parâmetro <parameter>option</parameter>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Opção</entry>
           <entry>Definir <parameter>value</parameter> para</entry>
           <entry>Notas</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_BUFFERSIZE</constant></entry>
           <entry valign="top">
            O tamanho do buffer a ser usado para cada leitura. No entanto,
            não há garantia de que essa solicitação será atendida.
           </entry>
           <entry valign="top">
            Added in cURL 7.10.
           </entry>
          </row>
          <row>
           <entry><constant>CURLOPT_CONNECTTIMEOUT</constant></entry>
           <entry valign="top">
            O número de segundos a aguardar durante a tentativa de conexão. Use 0
            para esperar indefinidamente.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECTTIMEOUT_MS</constant></entry>
           <entry valign="top">
            O número de milissegundos de espera durante a tentativa de conexão. Use 0
            para esperar indefinidamente.
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            Se libcurl for construído para usar o resolvedor de nome do sistema padrão, essa
            parte da conexão ainda usará a resolução de segundo completo para
            tempos limite com um tempo limite mínimo permitido de um segundo.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_CACHE_TIMEOUT</constant></entry>
           <entry valign="top">
            O número de segundos para manter as entradas DNS na memória. Esta
            opção é definida como 120 (2 minutos) por padrão.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            O tempo limite para Esperar: 100 respostas contínuas em milissegundos.
            O padrão é 1000 milissegundos.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.36.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            Avance para o ipv6 para o algoritmo de happy eyeballs. Happy eyeballs tenta se
            conectar a endereços IPv4 e IPv6 para hosts dual-stack,
            preferindo IPv6 primeiro para milissegundos de tempo limite.
            O padrão é CURL_HET_DEFAULT, que atualmente é de 200 milissegundos.
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.59.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPSSLAUTH</constant></entry>
           <entry valign="top">
            O método de autenticação FTP (quando ativado):
            <literal>CURLFTPAUTH_SSL</literal> (tente SSL primeiro),
            <literal>CURLFTPAUTH_TLS</literal> (tente TLS primeiro) ou
            <literal>CURLFTPAUTH_DEFAULT</literal> (deixe cURL decidir).
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.12.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADEROPT</constant></entry>
           <entry valign="top">

            Como lidar com cabeçalhos. Uma das seguintes constantes:
            <simpara>
             <constant>CURLHEADER_UNIFIED</constant>: os cabeçalhos especificados em
             <constant>CURLOPT_HTTPHEADER</constant> serão utilizados nas requisições
             tanto para servidores quanto para proxies. Com esta opção habilitada,
             <constant>CURLOPT_PROXYHEADER</constant> não terá nenhum efeito.
            </simpara>
            <simpara>
             <constant>CURLHEADER_SEPARATE</constant>: faz
             com que os cabeçalhos <constant>CURLOPT_HTTPHEADER</constant> sejam enviados
             apenas para um servidor e não para um proxy. Os cabeçalhos de proxy devem ser definidos com
             <constant>CURLOPT_PROXYHEADER</constant> para serem usados. Observe que,
             se uma solicitação non-CONNECT for enviada a um proxy, libcurl enviará cabeçalhos
             de servidor e cabeçalhos de proxy. Ao fazer CONNECT, libcurl
             enviará cabeçalhos <constant>CURLOPT_PROXYHEADER</constant> apenas para o proxy e,
             em seguida, cabeçalhos <constant>CURLOPT_HTTPHEADER</constant> apenas para o servidor.
            </simpara>
            <simpara>
             O padrão é <constant>CURLHEADER_SEPARATE</constant> a partir de cURL
             7.42.1 e <constant>CURLHEADER_UNIFIED</constant> antes.
            </simpara>
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.37.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_VERSION</constant></entry>
           <entry valign="top">
            <constant>CURL_HTTP_VERSION_NONE</constant> (padrão, permite que CURL
            decida qual versão usar),
            <constant>CURL_HTTP_VERSION_1_0</constant> (força HTTP/1.0),
            <constant>CURL_HTTP_VERSION_1_1</constant> (força HTTP/1.1),
            <constant>CURL_HTTP_VERSION_2_0</constant> (tenta HTTP 2),
            <constant>CURL_HTTP_VERSION_2</constant> (alias de <constant>CURL_HTTP_VERSION_2_0</constant>),
            <constant>CURL_HTTP_VERSION_2TLS</constant> (somente tenta HTTP 2 sobre TLS (HTTPS)) ou
            <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant> (emite solicitações HTTP não TLS usando HTTP/2 sem atualização HTTP/1.1).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPAUTH</constant></entry>
           <entry valign="top">
            <para>
             Os métodos de autenticação HTTP a serem usados. As opções são:
             <constant>CURLAUTH_BASIC</constant>,
             <constant>CURLAUTH_DIGEST</constant>,
             <constant>CURLAUTH_GSSNEGOTIATE</constant>,
             <constant>CURLAUTH_NTLM</constant>,
             <constant>CURLAUTH_ANY</constant> e
             <constant>CURLAUTH_ANYSAFE</constant>.
            </para>
            <para>
            O operador <literal>|</literal> (ou) pode ser usado para combinar
             mais de um método. Se isso for feito, o cURL pesquisará o servidor para ver
             quais métodos ele suporta e escolher o melhor.
            </para>
            <para>
             <constant>CURLAUTH_ANY</constant> é um alias para
             <literal>CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
            </para>
            <para>
             <constant>CURLAUTH_ANYSAFE</constant> é um alias para
             <literal>CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
            </para>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILESIZE</constant></entry>
           <entry valign="top">
            O tamanho esperado, em bytes, do arquivo ao fazer upload de um arquivo
            para um site remoto. Observe que usar esta opção não impedirá que libcurl
            envie mais dados, pois exatamente o que é enviado depende de
            <constant>CURLOPT_READFUNCTION</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_LIMIT</constant></entry>
           <entry valign="top">
            A velocidade de transferência, em bytes por segundo, que a transferência deve estar
            abaixo durante a contagem de <constant>CURLOPT_LOW_SPEED_TIME</constant> segundos
            antes do PHP considerar a transferência muito lenta e abortar.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_TIME</constant></entry>
           <entry valign="top">
            O número de segundos que a velocidade de transferência deve estar abaixo de
            <constant>CURLOPT_LOW_SPEED_LIMIT</constant> antes que o PHP considere
            a transferência muito lenta e aborte.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXCONNECTS</constant></entry>
           <entry valign="top">
            A quantidade máxima de conexões persistentes permitidas.
            Quando o limite é atingido, o mais antigo do cache é fechado
            para evitar o aumento do número de conexões abertas.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXREDIRS</constant></entry>
           <entry valign="top">
            A quantidade máxima de redirecionamentos HTTP a seguir. Use esta opção
            juntamente com <constant>CURLOPT_FOLLOWLOCATION</constant>.
            O valor padrão de <literal>20</literal> é definido para evitar redirecionamentos infinitos.
            Definir como <literal>-1</literal> permite redirecionamentos infinitos e <literal>0</literal>
            recusa todos os redirecionamentos.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PORT</constant></entry>
           <entry valign="top">
            Um número de porta alternativo para se conectar.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTREDIR</constant></entry>
           <entry valign="top">
            Uma bitmask de 1 (301 movido permanentemente), 2 (302 encontrado)
            e 4 (303 consulte outro) se o método HTTP POST deve ser mantido
            quando <constant>CURLOPT_FOLLOWLOCATION</constant> é definido e
            ocorre um tipo específico de redirecionamento.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROTOCOLS</constant></entry>
           <entry valign="top">
            <para>
             Bitmask de valores <constant>CURLPROTO_*</constant>. Se usado, este bitmask
             limita quais protocolos libcurl pode usar na transferência. Isso permite que
             você tenha um libcurl construído para suportar uma ampla gama de protocolos, mas
             ainda limitar transferências específicas para poder usar apenas um subconjunto
             deles. Por padrão, o libcurl aceitará todos os protocolos que ele suporta.
             Consulte também <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
            </para>
            <para>
             As opções de protocolo válidas são:
             <constant>CURLPROTO_HTTP</constant>,
             <constant>CURLPROTO_HTTPS</constant>,
             <constant>CURLPROTO_FTP</constant>,
             <constant>CURLPROTO_FTPS</constant>,
             <constant>CURLPROTO_SCP</constant>,
             <constant>CURLPROTO_SFTP</constant>,
             <constant>CURLPROTO_TELNET</constant>,
             <constant>CURLPROTO_LDAP</constant>,
             <constant>CURLPROTO_LDAPS</constant>,
             <constant>CURLPROTO_DICT</constant>,
             <constant>CURLPROTO_FILE</constant>,
             <constant>CURLPROTO_TFTP</constant>,
             <constant>CURLPROTO_ALL</constant>
            </para>
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.19.4.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYAUTH</constant></entry>
           <entry valign="top">
            Os métodos de autenticação HTTP a serem usados para a conexão proxy.
            Use as mesmas máscaras de bits descritas em
            <constant>CURLOPT_HTTPAUTH</constant>. Para autenticação de proxy,
            apenas <constant>CURLAUTH_BASIC</constant> e
            <constant>CURLAUTH_NTLM</constant> são suportados atualmente.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYPORT</constant></entry>
           <entry valign="top">
            O número da porta do proxy ao qual se conectar. Esse número de porta
            também pode ser definido em <constant>CURLOPT_PROXY</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYTYPE</constant></entry>
           <entry valign="top">
            <constant>CURLPROXY_HTTP</constant> (padrão),
            <constant>CURLPROXY_SOCKS4</constant>,
            <constant>CURLPROXY_SOCKS5</constant>,
            <constant>CURLPROXY_SOCKS4A</constant> ou
            <constant>CURLPROXY_SOCKS5_HOSTNAME</constant>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REDIR_PROTOCOLS</constant></entry>
           <entry valign="top">
            Bitmask de valores <constant>CURLPROTO_*</constant> Se usado, este bitmask
            limita quais protocolos libcurl pode usar em uma transferência que segue
            em um redirecionamento quando <constant>CURLOPT_FOLLOWLOCATION</constant> está ativado.
            Isso permite que você limite transferências específicas para usar apenas um subconjunto
            de protocolos em redirecionamentos. Por padrão, libcurl permitirá todos os protocolos,
            exceto FILE e SCP. Esta é uma diferença em relação às versões pré-7.19.4
            que seguiriam incondicionalmente para todos os protocolos suportados.
            Consulte também <constant>CURLOPT_PROTOCOLS</constant> para valores constantes de protocolo.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.19.4.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESUME_FROM</constant></entry>
           <entry valign="top">
            O deslocamento, em bytes, do qual retomar uma transferência.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SOCKS5_AUTH</constant></entry>
           <entry valign="top">
            <para>
             Os métodos de autenticação SOCKS5 a serem usados. As opções são:
             <constant>CURLAUTH_BASIC</constant>,
             <constant>CURLAUTH_GSSAPI</constant>,
             <constant>CURLAUTH_NONE</constant>.
            </para>
            <para>
             O operador <literal>|</literal> (ou) pode ser usado para combinar
             mais de um método. Se isso for feito, o cURL pesquisará o servidor
             para ver quais métodos ele suporta e escolher o melhor.
            </para>
            <para>
             <constant>CURLAUTH_BASIC</constant> permite autenticação de nome de usuário/senha.
            </para>
            <para>
             <constant>CURLAUTH_GSSAPI</constant> permite autenticação GSS-API.
            </para>
            <para>
             <constant>CURLAUTH_NONE</constant> não permite autenticação.
            </para>
            <para>
             O padrão é <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
             Defina o nome de usuário e a senha reais com a opção <constant>CURLOPT_PROXYUSERPWD</constant>.
            </para>
           </entry>
           <entry valign="top">
            Disponível a partir de 7.3.0 e curl >= 7.55.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_OPTIONS</constant></entry>
           <entry valign="top">
            Defina as opções de comportamento SSL, que é uma bitmask de qualquer uma das seguintes constantes:
            <simpara>
             <constant>CURLSSLOPT_ALLOW_BEAST</constant>: não tente usar soluções
             alternativas para uma falha de segurança nos protocolos SSL3 e TLS1.0.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_REVOKE</constant>: desabilita as verificações
             de revogação de certificado para os back-ends SSL em que tal comportamento
             está presente.
            </simpara>
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.25.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            <literal>2</literal> para verificar se um campo Nome comum ou um campo Nome alternativo
            do assunto no certificado de mesmo nível SSL corresponde ao nome de host fornecido.
            <literal>0</literal> para não verificar os nomes.
            <literal>1</literal> não deve ser usado.
            Em ambientes de produção o valor desta opção
            deve ser mantido em <literal>2</literal> (valor padrão).
           </entry>
           <entry valign="top">
            Suporte para o valor <literal>1</literal> removido no cURL 7.28.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLVERSION</constant></entry>
           <entry valign="top">
            Um de <constant>CURL_SSLVERSION_DEFAULT</constant> (0),
            <constant>CURL_SSLVERSION_TLSv1</constant> (1),
            <constant>CURL_SSLVERSION_SSLv2</constant> (2),
            <constant>CURL_SSLVERSION_SSLv3</constant> (3),
            <constant>CURL_SSLVERSION_TLSv1_0</constant> (4),
            <constant>CURL_SSLVERSION_TLSv1_1</constant> (5) ou
            <constant>CURL_SSLVERSION_TLSv1_2</constant> (6).
            A versão máxima do TLS pode ser definida usando uma das constantes
            <constant>CURL_SSLVERSION_MAX_*</constant>. Também é possível OR uma das constantes <constant>CURL_SSLVERSION_*</constant>
            com uma das constantes <constant>CURL_SSLVERSION_MAX_*</constant>.
            <constant>CURL_SSLVERSION_MAX_DEFAULT</constant> (a versão máxima suportada pela biblioteca),
            <constant>CURL_SSLVERSION_MAX_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_2</constant>, ou
            <constant>CURL_SSLVERSION_MAX_TLSv1_3</constant>.
            <note>
             <para>
              Sua melhor aposta é não definir isso e deixá-lo usar o padrão.
              Defini-lo como 2 ou 3 é muito perigoso devido às vulnerabilidades
              conhecidas em SSLv2 e SSLv3.
             </para>
            </note>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_OPTIONS</constant></entry>
           <entry valign="top">
            Defina as opções de comportamento SSL do proxy, que é uma bitmask de qualquer uma das seguintes constantes:
            <simpara>
             <constant>CURLSSLOPT_ALLOW_BEAST</constant>: não tente usar soluções
             alternativas para uma falha de segurança nos protocolos SSL3 e TLS1.0.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_REVOKE</constant>: desabilita as verificações de
             revogação de certificado para os back-ends SSL em que tal comportamento está
             presente. (curl >= 7.44.0)
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_PARTIALCHAIN</constant>: não aceita cadeias de
             certificados "parciais", o que de outra forma faz por padrão. (curl >= 7.68.0)
            </simpara>
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            Defina como <literal>2</literal> para verificar os campos de nome do certificado do proxy HTTPS em relação ao nome do proxy.
            Quando definido como <literal>0</literal>, a conexão é bem-sucedida, independentemente dos nomes usados no certificado.
            Use essa habilidade com cuidado!
            <literal>1</literal> tratado como uma opção de depuração no curl 7.28.0 e anteriores.
            De curl 7.28.1 a 7.65.3, <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> é retornado.
            Do curl 7.66.0 em diante, <literal>1</literal> e <literal>2</literal> são tratados como o mesmo valor.
            Em ambientes de produção o valor desta opção deve ser mantido em <literal>2</literal>  (valor padrão).
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLVERSION</constant></entry>
           <entry valign="top">
            Um de <constant>CURL_SSLVERSION_DEFAULT</constant>,
            <constant>CURL_SSLVERSION_TLSv1</constant>,
            <constant>CURL_SSLVERSION_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_TLSv1_2</constant>,
            <constant>CURL_SSLVERSION_TLSv1_3</constant>,
            <constant>CURL_SSLVERSION_MAX_DEFAULT</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_2</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_3</constant> ou
            <constant>CURL_SSLVERSION_SSLv3</constant>.
            <note>
             <para>
              Sua melhor aposta é não definir isso e deixá-lo usar o <constant>CURL_SSLVERSION_DEFAULT</constant> padrão,
              que tentará descobrir a versão remota do protocolo SSL.
             </para>
            </note>
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e libcurl >= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STREAM_WEIGHT</constant></entry>
           <entry valign="top">
            Defina o peso numérico do fluxo (um número entre 1 e 256).
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.46.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPALIVE</constant></entry>
           <entry valign="top">
            Se definido como <literal>1</literal>, as sondagens de manutenção de atividade do TCP serão enviadas.
            O atraso e a frequência dessas sondagens podem ser controlados pelas opções <constant>CURLOPT_TCP_KEEPIDLE</constant>
            e <constant>CURLOPT_TCP_KEEPINTVL</constant>, desde que o sistema operacional as
            suporte. Se definido como <literal>0</literal> (padrão), os testes de manutenção de atividade são desativados.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPIDLE</constant></entry>
           <entry valign="top">
            Define o atraso, em segundos, que o sistema operacional aguardará enquanto a conexão
            estiver ociosa antes de enviar testes de manutenção de atividade, se <constant>CURLOPT_TCP_KEEPALIVE</constant>
            estiver ativado. Nem todos os sistemas operacionais oferecem suporte a essa opção.
            O padrão é <literal>60</literal>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPINTVL</constant></entry>
           <entry valign="top">
            Define o intervalo, em segundos, que o sistema operacional aguardará entre o envio de
            análises de manutenção de atividade, se <constant>CURLOPT_TCP_KEEPALIVE</constant> estiver ativado.
            Nem todos os sistemas operacionais oferecem suporte a essa opção.
            O padrão é <literal>60</literal>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMECONDITION</constant></entry>
           <entry valign="top">
            Como <constant>CURLOPT_TIMEVALUE</constant> é tratado.
            Use <constant>CURL_TIMECOND_IFMODSINCE</constant> para retornar a
            página somente se ela tiver sido modificada desde o horário especificado em
            <constant>CURLOPT_TIMEVALUE</constant>. Se não foi modificado,
            um cabeçalho <literal>"304 Not Modified"</literal> será retornado
            assumindo que <constant>CURLOPT_HEADER</constant> é &true;.
            Use <constant>CURL_TIMECOND_IFUNMODSINCE</constant> para o efeito reverso.
            Use <constant>CURL_TIMECOND_NONE</constant> para ignorar
            <constant>CURLOPT_TIMEVALUE</constant> e sempre retornar a página.
            <constant>CURL_TIMECOND_NONE</constant> é o padrão.
           </entry>
           <entry valign="top">
            Antes do cURL 7.46.0, o padrão era
            <constant>CURL_TIMECOND_IFMODSINCE</constant>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT</constant></entry>
           <entry valign="top">
            O número máximo de segundos para permitir que as funções cURL sejam executadas.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            O número máximo de milissegundos para permitir que as funções cURL
            sejam executadas.
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            Se libcurl for construído para usar o resolvedor de nome do sistema padrão, essa
            parte da conexão ainda usará a resolução de segundo completo para
            tempos limite com um tempo limite mínimo permitido de um segundo.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE</constant></entry>
           <entry valign="top">
            O tempo em segundos desde 1º de janeiro de 1970. O tempo será usado por
            <constant>CURLOPT_TIMECONDITION</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE_LARGE</constant></entry>
           <entry valign="top">
            O tempo em segundos desde 1º de janeiro de 1970. O tempo será usado
            por <constant>CURLOPT_TIMECONDITION</constant>. O padrão é zero.
            A diferença entre esta opção e <constant>CURLOPT_TIMEVALUE</constant>
            é o tipo do argumento. Em sistemas onde 'long' tem apenas 32 bits de largura,
            esta opção deve ser usada para definir datas além do ano de 2038.
           </entry>
           <entry valign="top">
            Adicionado em cURL 7.59.0. Disponível desde PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant></entry>
           <entry valign="top">
            Se um download exceder essa velocidade (contada em bytes por segundo) na
            média cumulativa durante a transferência, a transferência será pausada para
            manter a taxa média menor ou igual ao valor do parâmetro.
            O padrão é velocidade ilimitada.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.15.5.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant></entry>
           <entry valign="top">
            Se um upload exceder essa velocidade (contada em bytes por segundo) na
            média cumulativa durante a transferência, a transferência será pausada para
            manter a taxa média menor ou igual ao valor do parâmetro.
            O padrão é velocidade ilimitada.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.15.5.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_AUTH_TYPES</constant></entry>
           <entry valign="top">
            Uma máscara de bits que consiste em um ou mais
            <constant>CURLSSH_AUTH_PUBLICKEY</constant>,
            <constant>CURLSSH_AUTH_PASSWORD</constant>,
            <constant>CURLSSH_AUTH_HOST</constant>,
            <constant>CURLSSH_AUTH_KEYBOARD</constant>. Defina como
            <constant>CURLSSH_AUTH_ANY</constant> para permitir que libcurl escolha um.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_IPRESOLVE</constant></entry>
           <entry valign="top">
            Permite que um aplicativo selecione que tipo de endereço IP usar ao
            resolver nomes de host. Isso só é interessante ao usar nomes de host que
            resolvem endereços usando mais de uma versão de IP, os valores possíveis são
            CURL_IPRESOLVE_WHATEVER, CURL_IPRESOLVE_V4, CURL_IPRESOLVE_V6, por padrão CURL_IPRESOLVE_WHATEVER.
            <constant>CURL_IPRESOLVE_WHATEVER</constant>,
            <constant>CURL_IPRESOLVE_V4</constant>,
            <constant>CURL_IPRESOLVE_V6</constant>, por padrão
            <constant>CURL_IPRESOLVE_WHATEVER</constant>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.10.8.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_FILEMETHOD</constant></entry>
           <entry valign="top">
            Diga ao curl qual método usar para acessar um arquivo em um servidor FTP(S). Os valores possíveis são
            <constant>CURLFTPMETHOD_MULTICWD</constant>,
            <constant>CURLFTPMETHOD_NOCWD</constant> e
            <constant>CURLFTPMETHOD_SINGLECWD</constant>.
           </entry>
           <entry valign="top">
            Adicionado no cURL 7.15.1.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> deve ser uma <type>string</type> para os
       seguintes valores do parâmetro <parameter>option</parameter>:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Opção</entry>
           <entry>Set <parameter>value</parameter> to</entry>
           <entry>Definir <parameter>value</parameter> para</entry>
           <entry>Notas</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant></entry>
           <entry valign="top">
            Permite o uso de um socket de domínio Unix abstrato em vez de estabelecer
            uma conexão TCP com um host e define o caminho para
            a <type>string</type> fornecida. Esta opção compartilha a mesma semântica
            que <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Essas duas opções compartilham
            o mesmo armazenamento e, portanto, apenas uma delas pode ser definida por
            identificador.
           </entry>
           <entry valign="top">
            Disponível desde PHP 7.3.0 e cURL 7.53.0
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAINFO</constant></entry>
           <entry valign="top">
            O nome de um arquivo contendo um ou mais certificados para verificar
            com o par. Isso só faz sentido quando usado em combinação com
            <constant>CURLOPT_SSL_VERIFYPEER</constant>.
           </entry>
           <entry valign="top">
            Pode exigir um caminho absoluto.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAPATH</constant></entry>
           <entry valign="top">
            Um diretório que contém vários certificados de CA. Use esta opção
            juntamente com <constant>CURLOPT_SSL_VERIFYPEER</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIE</constant></entry>
           <entry valign="top">
            O conteúdo do cabeçalho <literal>"Cookie: "</literal> a ser usado
            na solicitação HTTP.
            Observe que vários cookies são separados por um ponto e vírgula
            seguido por um espaço (exemplo: "<literal>fruta=maça; cor=vermelha</literal>")
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEFILE</constant></entry>
           <entry valign="top">
            O nome do arquivo que contém os dados do cookie. O arquivo de cookie
            pode estar no formato Netscape ou apenas cabeçalhos de estilo HTTP
            simples despejados em um arquivo.
            Se o nome for uma string vazia, nenhum cookie será carregado, mas
            a manipulação de cookies ainda estará habilitada.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEJAR</constant></entry>
           <entry valign="top">
            O nome de um arquivo para salvar todos os cookies internos quando o identificador é fechado,
            por exemplo após uma chamada para curl_close.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIELIST</constant></entry>
           <entry valign="top">
            Uma string de cookie (ou seja, uma única linha no formato Netscape/Mozilla ou um
            cabeçalho Set-Cookie regular estilo HTTP) adiciona esse único cookie ao armazenamento interno de cookies.
            <literal>"ALL"</literal> apaga todos os cookies mantidos na memória.
            <literal>"SESS"</literal> apaga todos os cookies de sessão mantidos na memória.
            <literal>"FLUSH"</literal> grava todos os cookies conhecidos no arquivo especificado por <constant>CURLOPT_COOKIEJAR</constant>.
            <literal>"RELOAD"</literal> carrega todos os cookies dos arquivos especificados por <constant>CURLOPT_COOKIEFILE</constant>.
           </entry>
           <entry valign="top">
            Disponível desde cURL 7.14.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CUSTOMREQUEST</constant></entry>
           <entry valign="top"><para>
            Um método de solicitação personalizado para usar em vez de
            <literal>"GET"</literal> ou <literal>"HEAD"</literal> ao fazer uma
            solicitação HTTP. Isso é útil para fazer
            <literal>"GET"</literal> ou outras solicitações HTTP mais obscuras.
            Os valores válidos são coisas como <literal>"GET"</literal>,
            <literal>"POST"</literal>, <literal>"CONNECT"</literal> e assim por diante;
            ou seja, não insira uma linha de solicitação HTTP inteira aqui. Por exemplo,
            inserir <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal>
            seria incorreto.
            <note>
             <para>
              Não faça isso sem antes certificar-se de que o servidor oferece suporte
              ao método de solicitação personalizado.
             </para>
            </note>
           </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DEFAULT_PROTOCOL</constant></entry>
           <entry valign="top"><para>
            O protocolo padrão a ser usado se a URL não tiver um nome de esquema.
           </para></entry>
           <entry valign="top">
            Adicionado no cURL 7.45.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_INTERFACE</constant></entry>
           <entry valign="top"><para>
            Defina o nome da interface de rede à qual o resolvedor de DNS deve se vincular.
            Deve ser um nome de interface (não um endereço).
           </para></entry>
           <entry valign="top">
            Adicionado no cURL 7.33.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_LOCAL_IP4</constant></entry>
           <entry valign="top"><para>
            Defina o endereço IPv4 local ao qual o resolvedor deve se vincular. O argumento
            deve conter um único endereço IPv4 numérico como string.
           </para></entry>
           <entry valign="top">
            Adicionado no cURL 7.33.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_LOCAL_IP6</constant></entry>
           <entry valign="top"><para>
            Defina o endereço IPv6 local ao qual o resolvedor deve se vincular. O argumento
            deve conter um único endereço IPv6 numérico como string.
           </para></entry>
           <entry valign="top">
            Adicionado no cURL 7.33.0. Disponível desde PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EGDSOCKET</constant></entry>
           <entry valign="top">
            Como <constant>CURLOPT_RANDOM_FILE</constant>, exceto um nome de arquivo
            para um socket Entropy Gathering Daemon.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_ENCODING</constant></entry>
           <entry valign="top">
            The contents of the <literal>"Accept-Encoding: "</literal> header.
            This enables decoding of the response. Supported encodings are
            <literal>"identity"</literal>, <literal>"deflate"</literal>, and
            <literal>"gzip"</literal>. If an empty string, <literal>""</literal>,
            is set, a header containing all supported encoding types is sent.
           </entry>
           <entry valign="top">
            Added in cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPPORT</constant></entry>
           <entry valign="top">
            The value which will be used to get the IP address to use
            for the FTP "PORT" instruction. The "PORT" instruction tells
            the remote server to connect to our specified IP address.  The
            string may be a plain IP address, a hostname, a network
            interface name (under Unix), or just a plain '-' to use the
            systems default IP address.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INTERFACE</constant></entry>
           <entry valign="top">
            The name of the outgoing network interface to use. This can be an
            interface name, an IP address or a host name.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KEYPASSWD</constant></entry>
           <entry valign="top">
            The password required to use the <constant>CURLOPT_SSLKEY</constant>
            or <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant> private key.
           </entry>
           <entry valign="top">
            Added in cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KRB4LEVEL</constant></entry>
           <entry valign="top">
            The KRB4 (Kerberos 4) security level. Any of the following values
            (in order from least to most powerful) are valid:
            <literal>"clear"</literal>,
            <literal>"safe"</literal>,
            <literal>"confidential"</literal>,
            <literal>"private".</literal>.
            If the string does not match one of these,
            <literal>"private"</literal> is used. Setting this option to &null;
            will disable KRB4 security. Currently KRB4 security only works
            with FTP transactions.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOGIN_OPTIONS</constant></entry>
           <entry valign="top">
            Can be used to set protocol specific login options, such as the
            preferred authentication mechanism via "AUTH=NTLM" or "AUTH=*",
            and should be used in conjunction with the
            <constant>CURLOPT_USERNAME</constant> option.
           </entry>
           <entry valign="top">
            Added in cURL 7.34.0. Available since PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PINNEDPUBLICKEY</constant></entry>
           <entry valign="top">
            Set the pinned public key.
            The string can be the file name of your pinned public key. The file
            format expected is "PEM" or "DER". The string can also be any
            number of base64 encoded sha256 hashes preceded by "sha256//" and
            separated by ";".
           </entry>
           <entry valign="top">
            Added in cURL 7.39.0. Available since PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTFIELDS</constant></entry>
           <entry valign="top">
            <simpara>
             The full data to post in a HTTP "POST" operation.
             This parameter can either be
             passed as a urlencoded string like '<literal>para1=val1&amp;para2=val2&amp;...</literal>'
             or as an array with the field name as key and field data as value.
             If <parameter>value</parameter> is an array, the
             <literal>Content-Type</literal> header will be set to
             <literal>multipart/form-data</literal>.
            </simpara>
            <simpara>
             Files can be sent using <classname>CURLFile</classname> or <classname>CURLStringFile</classname>,
             in which case <parameter>value</parameter> must be an array.
            </simpara>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PRIVATE</constant></entry>
           <entry valign="top">
            Any data that should be associated with this cURL handle. This data
            can subsequently be retrieved with the
            <constant>CURLINFO_PRIVATE</constant> option of
            <function>curl_getinfo</function>. cURL does nothing with this data.
            When using a cURL multi handle, this private data is typically a
            unique key to identify a standard cURL handle.
           </entry>
           <entry valign="top">
            Added in cURL 7.10.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PRE_PROXY</constant></entry>
           <entry valign="top">
            Set a <type>string</type> holding the host name or dotted numerical
            IP address to be used as the preproxy that curl connects to before
            it connects to the HTTP(S) proxy specified in the
            <constant>CURLOPT_PROXY</constant> option for the upcoming request.
            The preproxy can only be a SOCKS proxy and it should be prefixed with
            <literal>[scheme]://</literal> to specify which kind of socks is used.
            A numerical IPv6 address must be written within [brackets].
            Setting the preproxy to an empty string explicitly disables the use of a preproxy.
            To specify port number in this string, append <literal>:[port]</literal>
            to the end of the host name. The proxy's port number may optionally be
            specified with the separate option <constant>CURLOPT_PROXYPORT</constant>.
            Defaults to using port 1080 for proxies if a port is not specified.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY</constant></entry>
           <entry valign="top">
            The HTTP proxy to tunnel requests through.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SERVICE_NAME</constant></entry>
           <entry valign="top">
            The proxy authentication service name.
           </entry>
           <entry valign="top">
            Added in cURL 7.43.0 for HTTP proxies, and in cURL 7.49.0 for SOCKS5 proxies.
            Available since PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CAINFO</constant></entry>
           <entry valign="top">
            The path to proxy Certificate Authority (CA) bundle. Set the path as a
            <type>string</type> naming a file holding one or more certificates to
            verify the HTTPS proxy with.
            This option is for connecting to an HTTPS proxy, not an HTTPS server.
            Defaults set to the system path where libcurl's cacert bundle is assumed
            to be stored.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CAPATH</constant></entry>
           <entry valign="top">
            The directory holding multiple CA certificates to verify the HTTPS proxy with.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CRLFILE</constant></entry>
           <entry valign="top">
            Set the file name with the concatenation of CRL (Certificate Revocation List)
            in PEM format to use in the certificate validation that occurs during
            the SSL exchange.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_KEYPASSWD</constant></entry>
           <entry valign="top">
            Set the string be used as the password required to use the
            <constant>CURLOPT_PROXY_SSLKEY</constant> private key. You never needed a
            passphrase to load a certificate but you need one to load your private key.
            This option is for connecting to an HTTPS proxy, not an HTTPS server.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant></entry>
           <entry valign="top">
            Set the pinned public key for HTTPS proxy. The string can be the file name
            of your pinned public key. The file format expected is "PEM" or "DER".
            The string can also be any number of base64 encoded sha256 hashes preceded by
            "sha256//" and separated by ";"
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLCERT</constant></entry>
           <entry valign="top">
            The file name of your client certificate used to connect to the HTTPS proxy.
            The default format is "P12" on Secure Transport and "PEM" on other engines,
            and can be changed with <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>.
            With NSS or Secure Transport, this can also be the nickname of the certificate
            you wish to authenticate with as it is named in the security database.
            If you want to use a file from the current directory, please precede it with
            "./" prefix, in order to avoid confusion with a nickname.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            The format of your client certificate used when connecting to an HTTPS proxy.
            Supported formats are "PEM" and "DER", except with Secure Transport.
            OpenSSL (versions 0.9.3 and later) and Secure Transport
            (on iOS 5 or later, or OS X 10.7 or later) also support "P12" for
            PKCS#12-encoded files. Defaults to "PEM".
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            The list of ciphers to use for the connection to the HTTPS proxy.
            The list must be syntactically correct, it consists of one or more cipher
            strings separated by colons. Commas or spaces are also acceptable separators
            but colons are normally used, !, - and + can be used as operators.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLS13_CIPHERS</constant></entry>
           <entry valign="top">
            The list of cipher suites to use for the TLS 1.3 connection to a proxy.
            The list must be syntactically correct, it consists of one or more
            cipher suite strings separated by colons. This option is currently used
            only when curl is built to use OpenSSL 1.1.1 or later.
            If you are using a different SSL backend you can try setting
            TLS 1.3 cipher suites by using the <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant> option.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.61.0. Available when built with OpenSSL &gt;= 1.1.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLKEY</constant></entry>
           <entry valign="top">
            The file name of your private key used for connecting to the HTTPS proxy.
            The default format is "PEM" and can be changed with
            <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>.
            (iOS and Mac OS X only) This option is ignored if curl was built against Secure Transport.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0. Available if built TLS enabled.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            The format of your private key. Supported formats are "PEM", "DER" and "ENG".
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant></entry>
           <entry valign="top">
            The password to use for the TLS authentication method specified with the
            <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant> option. Requires that the
            <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> option to also be set.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant></entry>
           <entry valign="top">
            The method of the TLS authentication used for the HTTPS connection. Supported method is "SRP".
            <note>
             <para>
              Secure Remote Password (SRP) authentication for TLS provides mutual authentication
              if both sides have a shared secret. To use TLS-SRP, you must also set the
              <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> and
              <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> options.
             </para>
            </note>
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant></entry>
           <entry valign="top">
            The username to use for the HTTPS proxy TLS authentication method specified with the
            <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant> option. Requires that the
            <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> option to also be set.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYUSERPWD</constant></entry>
           <entry valign="top">
            A username and password formatted as
            <literal>"[username]:[password]"</literal> to use for the
            connection to the proxy.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANDOM_FILE</constant></entry>
           <entry valign="top">
            A filename to be used to seed the random number generator for SSL.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANGE</constant></entry>
           <entry valign="top">
            Range(s) of data to retrieve in the format
            <literal>"X-Y"</literal> where X or Y are optional. HTTP transfers
            also support several intervals, separated with commas in the format
            <literal>"X-Y,N-M"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REFERER</constant></entry>
           <entry valign="top">
            The contents of the <literal>"Referer: "</literal> header to be used
            in a HTTP request.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SERVICE_NAME</constant></entry>
           <entry valign="top">
            The authentication service name.
           </entry>
           <entry valign="top">
            Added in cURL 7.43.0. Available since PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant></entry>
           <entry valign="top">
            A string containing 32 hexadecimal digits. The string should be the
            MD5 checksum of the remote host's public key, and libcurl will reject
            the connection to the host unless the md5sums match.
            This option is only for SCP and SFTP transfers.
           </entry>
           <entry valign="top">
            Added in cURL 7.17.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant></entry>
           <entry valign="top">
            The file name for your public key. If not used, libcurl defaults to
            $HOME/.ssh/id_dsa.pub if the HOME environment variable is set,
            and just "id_dsa.pub" in the current directory if HOME is not set.
           </entry>
           <entry valign="top">
            Added in cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant></entry>
           <entry valign="top">
            The file name for your private key. If not used, libcurl defaults to
            $HOME/.ssh/id_dsa if the HOME environment variable is set,
            and just "id_dsa" in the current directory if HOME is not set.
            If the file is password-protected, set the password with
            <constant>CURLOPT_KEYPASSWD</constant>.
           </entry>
           <entry valign="top">
            Added in cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            A list of ciphers to use for SSL. For example,
            <literal>RC4-SHA</literal> and <literal>TLSv1</literal> are valid
            cipher lists.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERT</constant></entry>
           <entry valign="top">
            The name of a file containing a PEM formatted certificate.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTPASSWD</constant></entry>
           <entry valign="top">
            The password required to use the
            <constant>CURLOPT_SSLCERT</constant> certificate.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            The format of the certificate. Supported formats are
            <literal>"PEM"</literal> (default), <literal>"DER"</literal>,
            and <literal>"ENG"</literal>.
            As of OpenSSL 0.9.3, <literal>"P12"</literal> (for PKCS#12-encoded files)
            is also supported.
           </entry>
           <entry valign="top">
            Added in cURL 7.9.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE</constant></entry>
           <entry valign="top">
            The identifier for the crypto engine of the private SSL key
            specified in <constant>CURLOPT_SSLKEY</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE_DEFAULT</constant></entry>
           <entry valign="top">
            The identifier for the crypto engine used for asymmetric crypto
            operations.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEY</constant></entry>
           <entry valign="top">
            The name of a file containing a private SSL key.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYPASSWD</constant></entry>
           <entry valign="top"><para>
            The secret password needed to use the private SSL key specified in
            <constant>CURLOPT_SSLKEY</constant>.
            <note>
             <para>
              Since this option contains a sensitive password, remember to keep
              the PHP script it is contained within safe.
             </para>
            </note>
           </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            The key type of the private SSL key specified in
            <constant>CURLOPT_SSLKEY</constant>. Supported key types are
            <literal>"PEM"</literal> (default), <literal>"DER"</literal>,
            and <literal>"ENG"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TLS13_CIPHERS</constant></entry>
           <entry valign="top">
            The list of cipher suites to use for the TLS 1.3 connection. The list must be
            syntactically correct, it consists of one or more cipher suite strings separated by colons.
            This option is currently used only when curl is built to use OpenSSL 1.1.1 or later.
            If you are using a different SSL backend you can try setting
            TLS 1.3 cipher suites by using the <constant>CURLOPT_SSL_CIPHER_LIST</constant> option.
           </entry>
           <entry valign="top">
            Available since PHP 7.3.0 and libcurl &gt;= cURL 7.61.0. Available when built with OpenSSL &gt;= 1.1.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNIX_SOCKET_PATH</constant></entry>
           <entry valign="top">
            Enables the use of Unix domain sockets as connection endpoint and
            sets the path to the given <type>string</type>.
           </entry>
           <entry valign="top">
            Added in cURL 7.40.0. Available since PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_URL</constant></entry>
           <entry valign="top">
            The URL to fetch. This can also be set when initializing a
            session with <function>curl_init</function>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERAGENT</constant></entry>
           <entry valign="top">
            The contents of the <literal>"User-Agent: "</literal> header to be
            used in a HTTP request.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERNAME</constant></entry>
           <entry valign="top">
            The user name to use in authentication.
           </entry>
           <entry valign="top">
            Added in cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWORD</constant></entry>
           <entry valign="top">
            The password to use in authentication.
           </entry>
           <entry valign="top">
            Added in cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERPWD</constant></entry>
           <entry valign="top">
            A username and password formatted as
            <literal>"[username]:[password]"</literal> to use for the
            connection.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_XOAUTH2_BEARER</constant></entry>
           <entry valign="top">
            Specifies the OAuth 2.0 access token.
           </entry>
           <entry valign="top">
            Added in cURL 7.33.0. Available since PHP 7.0.7.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> should be an array for the
       following values of the <parameter>option</parameter> parameter:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Option</entry>
           <entry>Set <parameter>value</parameter> to</entry>
           <entry>Notes</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECT_TO</constant></entry>
           <entry valign="top">
            Connect to a specific host and port instead of the URL's host and port.
            Accepts an array of strings with the format
            <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
           </entry>
           <entry valign="top">
            Added in cURL 7.49.0. Available since PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP200ALIASES</constant></entry>
           <entry valign="top">
            An array of HTTP 200 responses that will be treated as valid
            responses and not as errors.
           </entry>
           <entry valign="top">
            Added in cURL 7.10.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPHEADER</constant></entry>
           <entry valign="top">
            An array of HTTP header fields to set, in the format
            <code>
             array('Content-type: text/plain', 'Content-length: 100')
            </code>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTQUOTE</constant></entry>
           <entry valign="top">
            An array of FTP commands to execute on the server after the FTP
            request has been performed.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYHEADER</constant></entry>
           <entry valign="top">
            An array of custom HTTP headers to pass to proxies.
           </entry>
           <entry valign="top">
            Added in cURL 7.37.0. Available since PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_QUOTE</constant></entry>
           <entry valign="top">
            An array of FTP commands to execute on the server prior to the FTP
            request.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESOLVE</constant></entry>
           <entry valign="top">
            Provide a custom address for a specific host and port pair. An array
            of hostname, port, and IP address strings, each element separated by
            a colon. In the format:
            <code>
             array("example.com:80:127.0.0.1")
            </code>
           </entry>
           <entry valign="top">
            Added in cURL 7.21.3.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> should be a stream resource (using
       <function>fopen</function>, for example) for the following values of the
       <parameter>option</parameter> parameter:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Option</entry>
           <entry>Set <parameter>value</parameter> to</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_FILE</constant></entry>
           <entry valign="top">
            The file that the transfer should be written to. The default
            is <literal>STDOUT</literal> (the browser window).
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILE</constant></entry>
           <entry valign="top">
            The file that the transfer should be read from when uploading.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STDERR</constant></entry>
           <entry valign="top">
            An alternative location to output errors to instead of
            <literal>STDERR</literal>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEHEADER</constant></entry>
           <entry valign="top">
            The file that the header part of the transfer is written to.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       <parameter>value</parameter> should be the name of a valid function or a Closure
       for the following values of the <parameter>option</parameter> parameter:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Option</entry>
           <entry>Set <parameter>value</parameter> to</entry>
           <entry>Notes</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADERFUNCTION</constant></entry>
           <entry valign="top">
            A callback accepting two parameters.
            The first is the cURL resource, the second is a
            string with the header data to be written. The header data must
            be written by this callback. Return the number of
            bytes written.
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWDFUNCTION</constant></entry>
           <entry valign="top">
            A callback accepting three parameters.
            The first is the cURL resource, the second is a
            string containing a password prompt, and the third is the maximum
            password length. Return the string containing the password.
           </entry>
           <entry>Removed as of PHP 7.3.0.</entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROGRESSFUNCTION</constant></entry>
           <entry valign="top">
            <para>
             A callback accepting five parameters.
             The first is the cURL resource, the second is the total number of
             bytes expected to be downloaded in this transfer, the third is
             the number of bytes downloaded so far, the fourth is the total
             number of bytes expected to be uploaded in this transfer, and the
             fifth is the number of bytes uploaded so far.
            </para>
            <note>
             <para>
              The callback is only called when the <constant>CURLOPT_NOPROGRESS</constant>
              option is set to &false;.
             </para>
            </note>
            <para>
             Return a non-zero value to abort the transfer. In which case, the
             transfer will set a <constant>CURLE_ABORTED_BY_CALLBACK</constant>
             error.
            </para>
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_READFUNCTION</constant></entry>
           <entry valign="top">
            A callback accepting three parameters.
            The first is the cURL resource, the second is a
            stream resource provided to cURL through the option
            <constant>CURLOPT_INFILE</constant>, and the third is the maximum
            amount of data to be read. The callback must return a string
            with a length equal or smaller than the amount of data requested,
            typically by reading it from the passed stream resource. It should
            return an empty string to signal <literal>EOF</literal>.
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEFUNCTION</constant></entry>
           <entry valign="top">
            A callback accepting two parameters.
            The first is the cURL resource, and the second is a
            string with the data to be written. The data must be saved by
            this callback. It must return the exact number of bytes written
            or the transfer will be aborted with an error.
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_XFERINFOFUNCTION</constant></entry>
           <entry valign="top">
            A callback accepting two parameters.
            Has a similar purpose as <constant>CURLOPT_PROGRESSFUNCTION</constant> but is more modern
            and the preferred option from cURL.
           </entry>
           <entry valign="top">
            Added in 7.32.0. Available as of PHP 8.2.0.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Other values:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Option</entry>
           <entry>Set <parameter>value</parameter> to</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_SHARE</constant></entry>
           <entry valign="top">
            A result of <function>curl_share_init</function>. Makes the cURL
            handle to use the data from the shared handle.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &curl.changelog.handle-param;
      <row>
       <entry>7.3.15, 7.4.3</entry>
       <entry>
        Introduced <constant>CURLOPT_HTTP09_ALLOWED </constant>.
       </entry>
      </row>
      <row>
       <entry>7.3.0</entry>
       <entry>
        Introduced <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>, <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>,
        <constant>CURLOPT_PRE_PROXY</constant>, <constant>CURLOPT_PROXY_CAINFO</constant>,
        <constant>CURLOPT_PROXY_CAPATH</constant>, <constant>CURLOPT_PROXY_CRLFILE</constant>,
        <constant>CURLOPT_PROXY_KEYPASSWD</constant>, <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>,
        <constant>CURLOPT_PROXY_SSLCERT</constant>, <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>,
        <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>, <constant>CURLOPT_PROXY_SSLKEY</constant>,
        <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>, <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>,
        <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>, <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>,
        <constant>CURLOPT_PROXY_SSLVERSION</constant>, <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>,
        <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>, <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>,
        <constant>CURLOPT_SOCKS5_AUTH</constant>, <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>,
        <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>, <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>,
        <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>, <constant>CURLOPT_HAPROXYPROTOCOL</constant>,
        <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>, <constant>CURLOPT_SSH_COMPRESSION</constant>,
        <constant>CURLOPT_TIMEVALUE_LARGE</constant> and <constant>CURLOPT_TLS13_CIPHERS</constant>.
       </entry>
      </row>
      <row>
       <entry>7.0.7</entry>
       <entry>
        Introduced <constant>CURL_HTTP_VERSION_2</constant>, <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant>,
        <constant>CURL_HTTP_VERSION_2TLS</constant>, <constant>CURL_REDIR_POST_301</constant>,
        <constant>CURL_REDIR_POST_302</constant>, <constant>CURL_REDIR_POST_303</constant>,
        <constant>CURL_REDIR_POST_ALL</constant>, <constant>CURL_VERSION_KERBEROS5</constant>,
        <constant>CURL_VERSION_PSL</constant>, <constant>CURL_VERSION_UNIX_SOCKETS</constant>,
        <constant>CURLAUTH_NEGOTIATE</constant>, <constant>CURLAUTH_NTLM_WB</constant>,
        <constant>CURLFTP_CREATE_DIR</constant>, <constant>CURLFTP_CREATE_DIR_NONE</constant>,
        <constant>CURLFTP_CREATE_DIR_RETRY</constant>, <constant>CURLHEADER_SEPARATE</constant>,
        <constant>CURLHEADER_UNIFIED</constant>, <constant>CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE</constant>,
        <constant>CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE</constant>, <constant>CURLMOPT_MAX_HOST_CONNECTIONS</constant>,
        <constant>CURLMOPT_MAX_PIPELINE_LENGTH</constant>, <constant>CURLMOPT_MAX_TOTAL_CONNECTIONS</constant>,
        <constant>CURLOPT_CONNECT_TO</constant>, <constant>CURLOPT_DEFAULT_PROTOCOL</constant>,
        <constant>CURLOPT_DNS_INTERFACE</constant>, <constant>CURLOPT_DNS_LOCAL_IP4</constant>,
        <constant>CURLOPT_DNS_LOCAL_IP6</constant>, <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>,
        <constant>CURLOPT_HEADEROPT</constant>, <constant>CURLOPT_LOGIN_OPTIONS</constant>,
        <constant>CURLOPT_PATH_AS_IS</constant>, <constant>CURLOPT_PINNEDPUBLICKEY</constant>,
        <constant>CURLOPT_PIPEWAIT</constant>, <constant>CURLOPT_PROXY_SERVICE_NAME</constant>,
        <constant>CURLOPT_PROXYHEADER</constant>, <constant>CURLOPT_SASL_IR</constant>,
        <constant>CURLOPT_SERVICE_NAME</constant>, <constant>CURLOPT_SSL_ENABLE_ALPN</constant>,
        <constant>CURLOPT_SSL_ENABLE_NPN</constant>, <constant>CURLOPT_SSL_FALSESTART</constant>,
        <constant>CURLOPT_SSL_VERIFYSTATUS</constant>, <constant>CURLOPT_STREAM_WEIGHT</constant>,
        <constant>CURLOPT_TCP_FASTOPEN</constant>, <constant>CURLOPT_TFTP_NO_OPTIONS</constant>,
        <constant>CURLOPT_UNIX_SOCKET_PATH</constant>, <constant>CURLOPT_XOAUTH2_BEARER</constant>,
        <constant>CURLPROTO_SMB</constant>, <constant>CURLPROTO_SMBS</constant>,
        <constant>CURLPROXY_HTTP_1_0</constant>, <constant>CURLSSH_AUTH_AGENT</constant> and
        <constant>CURLSSLOPT_NO_REVOKE</constant>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Initializing a new cURL session and fetching a web page</title>
    <programlisting role="php">
     <![CDATA[
<?php
// create a new cURL resource
$ch = curl_init();

// set URL and other appropriate options
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, false);

// grab URL and pass it to the browser
curl_exec($ch);

// close cURL resource, and free up system resources
curl_close($ch);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Passing an array to <constant>CURLOPT_POSTFIELDS</constant> will
    encode the data as <emphasis>multipart/form-data</emphasis>,
    while passing a URL-encoded string will encode the data as
    <emphasis>application/x-www-form-urlencoded</emphasis>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_setopt_array</function></member>
    <member><classname>CURLFile</classname></member>
    <member><classname>CURLStringFile</classname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
