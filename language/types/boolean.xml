<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 346c0bd13f99888108cbefeb9c7c17923cac1a47 Maintainer: fabioluciano Status: ready --><!-- CREDITS: felipe,fabioluciano,geekcom,gilsonhenrique -->
<sect1 xml:id="language.types.boolean">
 <title>Booleanos</title>

  <simpara>
   Este é o tipo mais simples. Um <type>bool</type> expressa um valor de verdade. Ele
   pode ser &true; ou &false;.
  </simpara>

  <sect2 xml:id="language.types.boolean.syntax">
   <title>Sintaxe</title>
   <para>
    Para especificar um <type>bool</type> literal, use as palavras-chave &true;
    ou &false;. Ambas são case-insensitive.
   </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$foo = True; // atribui o valor True para $foo
?>
]]>
     </programlisting>
    </informalexample>

  <para>
   Tipicamente, o resultado de um <link linkend="language.operators">operador</link>
   que retorne um valor <type>bool</type>, é passado para
   uma <link linkend="language.control-structures">estrutura de controle</link>.
  </para>

      <informalexample>
       <programlisting role="php">
<![CDATA[
<?php
// == É um operador que testa
// igualdade e retorna um booleano.
if ($action == "mostrar_versao") {
    echo "A versão é 1.23";
}

// isto não é necessário ...
if ($exibir_separadores == TRUE) {
    echo "<hr>\n";
}

// ... porque você pode simplesmente escrever isso:
if ($exibir_separadores) {
    echo "<hr>\n";
}
?>
]]>
     </programlisting>
    </informalexample>
  </sect2>

 <sect2 xml:id="language.types.boolean.casting">
  <title>Convertendo para booleano</title>

  <simpara>
   Para converter explicitamente um valor para <type>bool</type>, utilize os
   modificadores <literal>(bool)</literal> ou <literal>(boolean)</literal>. Entretanto,
   na maioria dos casos, o modificador não será necessário, já que qualquer valor
   será convertido automaticamente se um operador, função ou estrutura de controle requerer
   um argumento <type>bool</type>.
  </simpara>

  <simpara>
   Veja também <link linkend="language.types.type-juggling">Manipulação de tipos</link>.
  </simpara>

  <para>
   Ao converter para <type>bool</type>, os seguintes valores são considerados
   &false;:
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     o próprio <link linkend="language.types.boolean">booleano</link> &false;
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     o <link linkend="language.types.integer">inteiro</link> 0 (zero)
   </simpara>
   </listitem>
   <listitem>
    <simpara>
     os <link linkend="language.types.float">pontos flutuantes</link> 0.0 e -0.0 (zero)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     uma <link linkend="language.types.string">string</link> vazia e a
     <link linkend="language.types.string">string</link> "0"
     </simpara>
   </listitem>
   <listitem>
    <simpara>
     um <link linkend="language.types.array">array</link> sem elementos
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     o tipo especial <link linkend="language.types.null">NULL</link> (incluindo variáveis
     não definidas)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
    objetos <link linkend="ref.simplexml">SimpleXML</link> criados a partir de elementos vazios
    sem atributos, ou seja, elementos que não têm filhos nem atributos.
    </simpara>
   </listitem>
  </itemizedlist>

  <para>
   Qualquer outro valor é considerado &true; (incluindo qualquer
   <link linkend="language.types.resource">recurso</link> e <constant>NAN</constant>).
  </para>

  <warning>
   <simpara>
    <literal>-1</literal> é considerado &true;, como qualquer número que não seja zero (negativos
    ou positivos)!
   </simpara>
  </warning>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
var_dump((bool) "");        // bool(false)
var_dump((bool) "0");       // bool(false)
var_dump((bool) 1);         // bool(true)
var_dump((bool) -2);        // bool(true)
var_dump((bool) "foo");     // bool(true)
var_dump((bool) 2.3e5);     // bool(true)
var_dump((bool) array(12)); // bool(true)
var_dump((bool) array());   // bool(false)
var_dump((bool) "false");   // bool(true)
?>
]]>
   </programlisting>
  </informalexample>

 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
